# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: '**'
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck

      - name: Resave rda files
        run: tools::resaveRdaFiles("data")
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Create file with job status
        if: always()
        run: |
          touch ${{ runner.os }}_r${{ matrix.config.r }}.txt
          echo ${{ job.status }} > ${{ runner.os }}_r${{ matrix.config.r }}.txt

      - name: Upload status file as an artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pass_status_${{ runner.os }}_r${{ matrix.config.r }}
          path: ${{ runner.os }}_r${{ matrix.config.r }}.txt

  Create-Slack-notification:
    needs: R-CMD-check
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
      - name: Create short commit sha
        uses: benjlevesque/short-sha@v1.2
        id: set_short_sha
        with:
          length: 7

      - name: Download artifact pass_status_Linux_rrelease
        uses: actions/download-artifact@v3
        with:
          name: pass_status_Linux_rrelease

      - name: Download artifact pass_status_Linux_rdevel
        uses: actions/download-artifact@v3
        with:
          name: pass_status_Linux_rdevel

      - name: Download artifact pass_status_Windows_rrelease
        uses: actions/download-artifact@v3
        with:
          name: pass_status_Windows_rrelease

      - name: Set the statuses of each build as output parameters
        id: set_outputs
        run: |
          echo "status_urel=$(<pass_status_Linux_rrelease/Linux_rrelease.txt)" >> $GITHUB_OUTPUT
          echo "status_wrel=$(<pass_status_Windows_rrelease/Windows_rrelease.txt)" >> $GITHUB_OUTPUT
          echo "status_udev=$(<pass_status_Linux_rdevel/Linux_rdevel.txt)" >> $GITHUB_OUTPUT

      - name: Set status color
        id: set_color
        if: always()
        run: |
          echo ${{ steps.set_outputs.outputs.status_urel == 'failure'}}
          if [${{ steps.set_outputs.outputs.status_urel == 'failure'}} || ${{ steps.set_outputs.outputs.status_wrel  == 'failure'}} || ${{ steps.set_outputs.outputs.status_udev == 'failure'}}]
          then
            echo "::set-output name=run_status_color::\"danger\""
          else
            echo "::set-output name=run_status_color::\"primary\""
          fi

      - name: Send success JSON data to Slack workflow
        id: slack
        if: always()
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: "{\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"Workflow ${{github.workflow}} for commit ${{ steps.set_short_sha.outputs.sha }} in ${{github.repository}} by ${{github.actor}}.\"},\"accessory\":{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"text\":\"View commit\",\"emoji\":true},\"value\":\"click_me_123\",\"url\":\"${{github.server_url}}/${{github.repository}}/commit/${{github.sha}}\",\"action_id\":\"button-action\",\"style\":${{steps.set_color.outputs.run_status_color}}}},{\"type\":\"divider\"},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"Ubuntu-latest (R-release): *${{ steps.set_outputs.outputs.status_urel }}*, Ubuntu-latest (R-devel): *${{ steps.set_outputs.outputs.status_udev }}*, Windows (R-release): *${{ steps.set_outputs.outputs.status_wrel }}*\"},\"accessory\":{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"text\":\"View run #${{github.run_number}}\",\"emoji\":true},\"value\":\"click_me_123\",\"url\":\"${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}\",\"action_id\":\"button-action\",\"style\":${{steps.set_color.outputs.run_status_color}}}}]}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
